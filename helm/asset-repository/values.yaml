# Default values for api-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
enabled: true
php:
  image:
    repository: "ghcr.io/beerfranz/asset-repository-php"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.0.2-4"
  appEnv: prod
  appDebug: "0"
  appSecret: ""
  corsAllowOrigin: "^https?://.*?\\.app\\.local$"
  trustedHostRegexps:
    - "127\\.0\\.0\\.1"
    - "localhost"
    - ".*\\.app\\.local"
    - "app\\.local"
    - "asset-repository"
  trustedProxies:
    - "127.0.0.1"
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"

existingSecret: ""

caddy:
  image:
    repository: "ghcr.io/beerfranz/asset-repository-caddy"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.0.2-4"
  configBlock: |
    {$SERVER_NAME}
    log

    route {
        root * /srv/app/public
        vulcain

        # Add links to the API docs and to the Mercure Hub if not set explicitly (e.g. the PWA)
        header ?Link `</docs.jsonld>; rel="http://www.w3.org/ns/hydra/core#apiDocumentation", </.well-known/mercure>; rel="mercure"`
        # Disable Topics tracking if not enabled explicitly: https://github.com/jkarlin/topics
        header ?Permissions-Policy "browsing-topics=()"

        php_fastcgi unix//var/run/php/php-fpm.sock {
            header_up x-token-user-roles ROLE_ASSET_ADMIN
            header_up x-token-user-email admin@fake.io
        }
        encode zstd gzip
        file_server
    }

# You may prefer using the managed version in production: https://mercure.rocks
mercure:
  publicUrl: https://chart-example.local/.well-known/mercure
  # Change me!
  jwtSecret: "!ChangeMe!"
  corsAllowedOrigins: "^https?://.*?\\.app\\.local$"

# Full configuration: https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  enabled: true
  # If bringing your own PostgreSQL, the full uri to use
  # url: postgresql://api-platform:!ChangeMe!@database:5432/api?serverVersion=13&charset=utf8
  # Persistent Volume Storage configuration.
  # ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  persistence:
    enabled: false
  pullPolicy: IfNotPresent
  image:
    repository: postgres
    tag: 13-alpine
  auth:
    existingSecret: ""
    postgresPassword: "foo"
    username: "example"
    password: "ChangeMe"
    database: "api"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
    - name: https
      port: 443
      protocol: TCP
    - name: admin
      port: 2019
      protocol: TCP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# If you use Mercure, you need the managed or the On Premise version to deploy more than one pod: https://mercure.rocks/docs/hub/cluster
replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

pdb:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}
